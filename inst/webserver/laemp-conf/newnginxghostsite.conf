map $status $header_content_type_options {
    204 "";
    default "nosniff";
}

# Listen on http for Letsencrypt and 443 redirect
server {
    listen 80;
    listen [::]:80;

    server_name ghostsite286;
    root /srv/ghost/ghostsite286/system/nginx-root; # Used for acme.sh SSL verification (https://acme.sh)

}

# What we're actually listening on
server {

    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name ghostsite286;
    root /srv/ghost/ghostsite286/system/nginx-root; # Used for acme.sh SSL verification (https://acme.sh)

    ssl_certificate /etc/ssl/server/server.crt;
    ssl_certificate_key /etc/ssl/server/server.key;
    ssl_dhparam /etc/ssl/server/dhparams.pem;
    #INKVERB-INKCERT=INK_NOT_YET

    # setup our access and error logs
    access_log /var/log/nginx/ghostsite286-access.log;
    error_log /var/log/nginx/ghostsite286-error_log.log;

    # proxy all of our traffic to Ghost
    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_hide_header Upgrade; # iOS crashes with "Upgrade" header from Nginx; Apache will not send it; http/2 is not the problem https://superuser.com/a/1767279/942694
        proxy_pass http://127.0.0.1:ghostport286; # Send to https so Ghost knows everything is secure https://ghost.org/docs/faq/proxying-https-infinite-loops/

        add_header X-Content-Type-Options $header_content_type_options;
    }

    location ~ /.well-known {
        allow all;
    }

     client_max_body_size 100m;

}

##inkHTTPremoved
##INKHTTPSFIX=fixed
# Redirect all http to https
server {
  listen 80;
  listen [::]:80;
  server_name ghostsite286;

  return 301 https://$host$request_uri;
}
##verbFIXhttps
##INKWWWFIX=fixed
# Redirect all www to domain
server {
  server_name www.ghostsite286;
  return 301 $scheme://ghostsite286$request_uri;
}
##verbFIXwww
