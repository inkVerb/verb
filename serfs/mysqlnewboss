#!/bin/bash
#inkVerbSerf! verb.ink

# This creates a new MySQL/MariaDB database root user with password

# How to use:
## ./mysqlnewboss [ database username ] [ database user password - optional ]

usagenotes="This creates a new MySQL/MariaDB database root user with password"
usageformat="mysqlnewboss [ database username ] [ database user password - optional]"
usageexample="mysqlnewboss myGreatDBuser99
mysqlnewboss myGreatDBuser99 Secret12345%@"
hierarchy=( primary )
vsetnames=( "Database username" )
vsettypes=( isSQLUserCredential )
voptnames=( "Database password" )
vopttypes=( isSQLUserCredential )
voptflags=(  )
voptflagpurpose=(  )
dependencyinstall=( mysqlinstall )
prerequesite=(  )
usedby=(  )
useserfs=(  )
useconfigs=(  )
if [ -n "$infoINKonly" ] && [ "$infoINKonly" = "true" ]; then return 0; fi # Must have for proper usage to not run the full serf
if [ -e "/opt/verb/mods/mysqlnewboss.replace" ]; then . /opt/verb/mods/mysqlnewboss.replace; return 0; fi # Replaces this script
if [ -e "/opt/verb/mods/mysqlnewboss.before" ]; then . /opt/verb/mods/mysqlnewboss.before; fi # Precedes this script


dbBUser=$1
if [ -z ${2} ]; then
  dbPassword=$(/usr/bin/pwgen -s -1 10)
  serfOUT="New Password: ${dBPassword}"
else
  dbPassword=$2
fi

if [ -f "/opt/verb/conf/mysqlnewboss.${dbBUser}.cnf" ]; then
  echo " already exists."; exit 0
fi

/usr/bin/mariadb --defaults-extra-file=/opt/verb/conf/mysqlboss.cnf -e "
GRANT ALL PRIVILEGES ON *.* TO '${dbBUser}'@'localhost' IDENTIFIED BY '${dbPassword}' WITH GRANT OPTION;
FLUSH PRIVILEGES;"

/bin/echo "[client]
user = ${dbBUser}
password = ${dbPassword}
host = localhost
" > /opt/verb/conf/mysqlnewboss.${dbBUser}.cnf




if [ -e "/opt/verb/mods/mysqlnewboss.after" ]; then . /opt/verb/mods/mysqlnewboss.after; fi # Follows this script
