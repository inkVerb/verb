#!/bin/bash
#inkVerbSerf! verb.ink

# This prepares core framework config files for a domain, with OpenDKIM profiles and keys, inkCert, and inkDNS, WITHOUT including the actual SSL certificates, www/domain folder itself or its Apache/Nginx configs or html www/folder
## This is intended as a subscript to be used by adddomain
## This runs automatically from adddomain ONLY IF it has not run already for the domain
## This does NOT:
### Add the domain to inkCert for SSL requests
### Create Apache folders or configs for the domain
## For inkCert and Apache configs, use adddomain or adddomaincgi
## This can be run BEFORE AND AGAIN AFTER installinkvmail, it has soft tests to see what hasn't been done yet

# How to use:
## ./newdomainshell [ newdomain.tld ]

usagenotes="This prepares core framework config files for a domain, with OpenDKIM profiles and keys, inkCert, and inkDNS, WITHOUT including the actual SSL certificates, www/domain folder itself or its Apache/Nginx configs or html www/folder"
usageformat="newdomainshell [ newdomain.tld ]"
usageexample="newdomainshell inkisaverb.com"
hierarchy=( tertiary adddomain )
vsetnames=( "Domain" )
vsettypes=( isDomain )
voptnames=(  )
vopttypes=(  )
voptflags=(  )
voptflagpurpose=(  )
dependencyinstall=(  )
prerequesite=( newftpvip 'or' newftpfiler )
usedby=( adddomain addsubdomain )
useserfs=( setinkcertmail inkdnsadddomain newinkdkim inkvmaildomain inkdnsaddmail inkdnsaddinkdkim )
useconfigs=( servernameip servermailpath inkcertstatus )
if [ -n "$infoINKonly" ] && [ "$infoINKonly" = "true" ]; then return 0; fi # Must have for proper usage to not run the full serf
if [ -e "/opt/verb/mods/newdomainshell.replace" ]; then . /opt/verb/mods/newdomainshell.replace; return 0; fi # Replaces this script
if [ -e "/opt/verb/mods/newdomainshell.before" ]; then . /opt/verb/mods/newdomainshell.before; fi # Precedes this script


# Dependencies same as adddomain
if ! /bin/grep -q 'InkCertInstalled="DONE"' /opt/verb/conf/inkcertstatus; then
  /usr/bin/echo "Install inkCert first, I quit."; exit 8
fi
if ! /bin/grep -q 'InkDNSStat="INSTALLED"' /opt/verb/conf/inkdnsconf; then
  /usr/bin/echo "Install inkDNS first, I quit."; exit 8
fi
if /bin/grep -q 'EmailAllowed="YES"' /opt/verb/conf/servernameip && ! /bin/grep -q 'ServerMailStatus="VMAIL_SERVER"' /opt/verb/conf/servermailpath; then
  /usr/bin/echo "Install Postfix Vmail first, I quit."; exit 8
fi
if ! /bin/grep -q 'DomHostAllowed="YES"' /opt/verb/conf/servernameip; then
  /usr/bin/echo "Domain hosting not allowed, I quit."; exit 8
fi

# Include settings
. /opt/verb/conf/servernameip
. /opt/verb/conf/servermailpath
. /opt/verb/conf/inkcertstatus

newdomain=$1

# inkCert
if [ ! -f "/opt/verb/conf/inkcert/cli-ini/siteinkcert.${newdomain}" ]; then
  /bin/cp /opt/verb/conf/lib/inkcert-ini/cli.new.ini /opt/verb/conf/inkcert/cli-ini/cli.${newdomain}.ini
  /bin/sed -i "s/inkcertemail589/${InkCertEmail}/g" /opt/verb/conf/inkcert/cli-ini/cli.${newdomain}.ini
  /bin/sed -i "s/newdomain589/${newdomain}/g" /opt/verb/conf/inkcert/cli-ini/cli.${newdomain}.ini
  /bin/echo "InkCerted=NOT_YET" > /opt/verb/conf/inkcert/cli-ini/siteinkcert.${newdomain}
  /opt/verb/serfs/setinkcertmail ${newdomain}
fi

# inkDNS
if [ ! -f "/opt/verb/conf/inkdns/zones/db.${newdomain}" ]; then
  /opt/verb/serfs/inkdnsadddomain ${newdomain}; wait
fi

# inkDKIM & inkvmail (if installed)
if [ "${ServerMailStatus}" != "EMAIL_NOT_INSTALLED" ]; then
  /opt/verb/serfs/newinkdkim ${newdomain}; wait
  /opt/verb/serfs/inkvmaildomain ${newdomain}; wait
  
  # Add the unsubscribe maile recipient filter
  /opt/verb/serfs/inkvmailaddscriptfilter unsubscribe ${newdomain}; wait

  # inkDNS for inkvmail
  if [ -f "/opt/verb/conf/inkdns/zones/db.${newdomain}" ]; then
  /opt/verb/serfs/inkdnsaddmail ${newdomain}; wait
  /opt/verb/serfs/inkdnsaddinkdkim ${newdomain}; wait
  fi

fi

# Notify the NS slave nameservers
/opt/verb/serfs/rinkadddomain ${newdomain}; wait

# Finish
/bin/echo "Great! With no error messages, ${newdomain} is ready on the Verber."




if [ -e "/opt/verb/mods/newdomainshell.after" ]; then . /opt/verb/mods/newdomainshell.after; fi # Follows this script
