#!/bin/bash
#inkVerbSerf! verb.ink
# This relocates a service directory to an inkDrive mounted with inkdriveadd; directories will be double such as www/www/ vmail/vmail/ mysql/mysql/
## All credentials must be entered correctly for accurate confirmation
## Mounting www to hdd is not allowed

# How to use:
## ./inkdrivesvc [ service ] [ mount dir - optional ]

# Eg:
## ./inkdrivesvc www ssd 
## ./inkdrivesvc mysql


usagenotes="This relocates a service directory to an inkDrive mounted with inkdriveadd; directories will be double such as www/www/ vmail/vmail/ mysql/mysql/"
usageformat="inkdrivesvc [ service ] [ mount dir - optional ]"
usageexample="inkdrivesvc www ssd
inkdrivesvc mysql"
hierarchy=( primary )
vsetnames=( "Service name" )
vsettypes=( isChoice )
voptnames=( "Drive name" )
vopttypes=( isExists )
voptflags=(  )
voptflagpurpose=(  )
dependencyinstall=(  )
prerequesite=( inkdriveadd )
usedby=(  )
useserfs=(  )
useconfigs=( inkdrive/inkdriveinfo )
if [ -n "$infoINKonly" ] && [ "$infoINKonly" = "true" ]; then return 0; fi # Must have for proper usage to not run the full serf
if [ -e "/opt/verb/mods/inkdrivesvc.replace" ]; then . /opt/verb/mods/inkdrivesvc.replace; return 0; fi # Replaces this script
if [ -e "/opt/verb/mods/inkdrivesvc.before" ]; then . /opt/verb/mods/inkdrivesvc.before; fi # Precedes this script

if [ -z "${1}" ]; then
  /usr/bin/echo "Must desegnate a service."
  exit 5
fi

# Config check
if [ ! -f "/opt/verb/conf/inkdrive/inkdriveinfo" ]; then
  /usr/bin/echo "No drives installed; do that first."
  exit 8
else
  . /opt/verb/conf/inkdrive/inkdriveinfo
fi

# Defaults (prefer SSD)
Svc="${1}"
if [ -n "${2}" ]; then
  Mnt="${2}"
  if [ -f "/opt/verb/conf/inkdrive/ssd.${Mnt}" ]; then
    Typ="ssd"
  elif [ -f "/opt/verb/conf/inkdrive/hdd.${Mnt}" ]; then
    Typ="hdd"
  fi
elif [ -n "${SSDdefault}" ]; then
  Mnt=${SSDdefault}
  Typ="ssd"
elif [ -z "${SSDdefault}" ] && [ "${Svc}" = "www" ]; then
  /usr/bin/echo "Can only mount the www folder to an SSD drive, but there is none. Add an SSD drive first."
  exit 5
elif [ -n "${HDDdefault}" ]; then
  Mnt=${HDDdefault}
  Typ="hdd"
else
  /usr/bin/echo "There is no default drive. Something is very wrong."
  exit 6
fi

# Checks
if [ "${Svc}" = "www" ] && [ "${Typ}" = "hdd" ]; then
  if [ -n "$2" ]; then
    /usr/bin/echo "Cannot mount the www folder to HDD drive. Choose an SSD drive or leave 'Mount name' argument empty to try the default."
  else
    /usr/bin/echo "Cannot mount the www folder to HDD drive. Add an SSD drive first."
  fi
  exit 5
fi

# Service
case $Svc in
  www) SrcPath="/srv/www"; Owner="www:www"; Service='web' ;;
  mysql) SrcPath="/var/lib/mysql"; Owner="mysql:mysql"; Service='sql'
    # MySQL won't work becuase we need to figure out how to properly set it up
    # Consider this: https://unix.stackexchange.com/questions/151523/mysql-different-database-location
    /usr/bin/echo "Note MySQL is not yet configured to be able to work on a cloud drive."
  ;;
  postgres) SrcPath="/var/lib/postgres"; Owner="postgres:postgres"; Service='sql'
    /usr/bin/echo "Note PostgreSQL is not yet configured to be able to work on a cloud drive."
  ;;
  vmail) SrcPath="/srv/vmail"; Owner="vmail:vmail"; Service='mail' ;;
esac

# Checks
if [ -d "/mnt/${Mnt}/${Service}/${Svc}" ] && [ "$(/usr/bin/readlink -f "${SrcPath}")" = "/mnt/${Mnt}/${Service}/${Svc}" ]; then
  /usr/bin/echo "That service is already mounted to that drive."
  exit 0
elif [ -d "/mnt/${Mnt}/${Service}/${Svc}" ] && [ "$(/usr/bin/readlink -f "${SrcPath}")" ]; then
  /usr/bin/echo "That service is already mounted to $(/usr/bin/readlink -f "${SrcPath}")."
  exit 7
elif [ -d "/mnt/${Mnt}/${Service}/${Svc}" ]; then
  /usr/bin/echo "'${Svc}' already exists on that drive, but it isn't for any service on the server. Something is wrong."
  exit 6
elif [ -e "/mnt/${Mnt}/${Service}/${Svc}" ] && [ "$(/usr/bin/readlink -f /mnt/${Mnt}/${Service}/${Svc})" ]; then
  /usr/bin/echo "'${Svc}' is a link on that drive pointing to $(/usr/bin/readlink -f /mnt/${Mnt}/${Service}/${Svc}). Something is wrong."
  exit 6
elif [ -f "/mnt/${Mnt}/${Service}/${Svc}" ]; then
  /usr/bin/echo "A file '${Svc}' is already on that drive. Something is very wrong."
  exit 6
fi

# Space
SpaceAvail="$(/usr/bin/df -k "/mnt/${Mnt}" | /usr/bin/awk 'NR==2 { print $4 }')"
SpaceNeed="$(/usr/bin/du -s "${SrcPath}" | /usr/bin/awk '{ print $1 }')"
if [ "${SpaceNeed}" -gt "${SpaceAvail}" ]; then
  SpaceAvailH="$(/usr/bin/df -h "/mnt/${Mnt}" | /usr/bin/awk 'NR==2 { print $4 }')"
  SpaceNeedH="$(/usr/bin/du -sh "${SrcPath}" | /usr/bin/awk '{ print $1 }')"
  /usr/bin/echo "Not enough space. ${SpaceNeedH} needed, but only ${SpaceAvailH} available."
  exit 4
fi

# Stop services
case $Svc in
  www)
    /usr/bin/systemctl stop php-fpm
    if [ ${ServerType} = "laemp" ]; then
      /usr/bin/systemctl stop nginx httpd
    elif [ ${ServerType} = "lemp" ]; then
      /usr/bin/systemctl stop nginx
    elif [ ${ServerType} = "lamp" ]; then
      /usr/bin/systemctl stop httpd
    fi
  ;;
  mysql) /usr/bin/systemctl stop postfix dovecot mariadb ;;
  postgres) /usr/bin/systemctl stop postgres ;;
  vmail) /usr/bin/systemctl stop postfix dovecot mariadb ;;
esac

# Move & link
/usr/bin/mkdir -p "/mnt/${Mnt}/${Service}"
e="$?"; [[ "$e" = "0" ]] || exit "$e"
/usr/bin/mv "${SrcPath}" "/mnt/${Mnt}/${Service}/"
/usr/bin/mkdir -p ${SrcPath}
/usr/bin/echo "/mnt/${Mnt}/${Service}/${Svc} ${SrcPath} bind defaults,bind 0 0 #inkdrive-${Svc}" >> /etc/fstab
# Not mount the drive
/usr/bin/mount --bind /mnt/${Mnt}/${Service}/${Svc} ${SrcPath}
e="$?"; [[ "$e" = "0" ]] || exit "$e"
#/usr/bin/ln -sfn "/mnt/${Mnt}/${Service}/${Svc}" "${SrcPath}" #DEV this link was replaced with the fstab bind above, more effective
e="$?"; [[ "$e" = "0" ]] || exit "$e"
/usr/bin/chown -R ${Owner} "${SrcPath}"
/usr/bin/chown -R ${Owner} "/mnt/${Mnt}/${Service}"
## Conf for vmail
if [ "${Svc}" = "vmail" ]; then
  /usr/bin/mv /opt/verb/conf/servermailpass "/mnt/${Mnt}/.conf/"
  /usr/bin/ln -sfn "/mnt/${Mnt}/.conf/servermailpass" /opt/verb/conf/
  e="$?"; [[ "$e" = "0" ]] || exit "$e"
  /usr/bin/mv /opt/verb/conf/servermailpath "/mnt/${Mnt}/.conf/"
  /usr/bin/ln -sfn "/mnt/${Mnt}/.conf/servermailpath" /opt/verb/conf/
  e="$?"; [[ "$e" = "0" ]] || exit "$e"
  ### Legacy for vmail
  /usr/bin/ln -sfn "/mnt/${Mnt}" /var/vmail
  e="$?"; [[ "$e" = "0" ]] || exit "$e"
## Conf for mysql
elif [ "${Svc}" = "mysql" ]; then
  /usr/bin/mv /opt/verb/conf/sql/mysqlrootpassword "/mnt/${Mnt}/.conf/sql/"
  /usr/bin/ln -sfn "/mnt/${Mnt}/.conf/sql/mysqlrootpassword" /opt/verb/conf/sql/
  e="$?"; [[ "$e" = "0" ]] || exit "$e"
## Conf for postgres
elif [ "${Svc}" = "postgres" ]; then
  /usr/bin/mv /opt/verb/conf/sql/postgresrootpassword "/mnt/${Mnt}/.conf/sql/"
  /usr/bin/ln -sfn "/mnt/${Mnt}/.conf/sql/postgresrootpassword" /opt/verb/conf/sql/
  e="$?"; [[ "$e" = "0" ]] || exit "$e"
## Conf for www
elif [ "${Svc}" = "www" ]; then
  /usr/bin/mv /opt/verb/conf/vapps "/mnt/${Mnt}/.conf/"
  /usr/bin/ln -sfn "/mnt/${Mnt}/.conf/vapps" /opt/verb/conf/
  e="$?"; [[ "$e" = "0" ]] || exit "$e"
fi

# Start services
case $Svc in
  www)
    /usr/bin/systemctl start php-fpm
    if [ ${ServerType} = "laemp" ]; then
      /usr/bin/systemctl start nginx httpd
    elif [ ${ServerType} = "lemp" ]; then
      /usr/bin/systemctl start nginx
    elif [ ${ServerType} = "lamp" ]; then
      /usr/bin/systemctl start httpd
    fi
  ;;
  mysql) /usr/bin/systemctl start postfix dovecot mariadb ;;
  postgres) /usr/bin/systemctl start postgres ;;
  vmail) /usr/bin/systemctl start postfix dovecot mariadb ;;
esac

# Finish
if [ -d "/mnt/${Mnt}/${Service}/${Svc}" ] && [ "$(/usr/bin/readlink -f "${SrcPath}")" = "/mnt/${Mnt}/${Service}/${Svc}" ]; then
  /usr/bin/echo "${Svc} folder successfully mounted on ${Typ} drive at /mnt/${Mnt}"
else
  /usr/bin/echo "${Svc} folder is not where it should be. Something is very wrong."
  exit 6
fi


if [ -e "/opt/verb/mods/inkdrivesvc.after" ]; then . /opt/verb/mods/inkdrivesvc.after; fi # Follows this script
