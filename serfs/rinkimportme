#!/bin/bash
#inkVerbSerf! verb.ink

# This runs rinkadddomain for each domain active on this verber, intended for just after being imported by the Rink, but also can be used to refresh all served domains
## This automatically loops through verb domains and normal domains, using servertldstatus and entries in inkdns/zones, inkdns/inkzones, and inkcert/, then verifying their configs in the webserver configs
## This does not loop through subdomains, but only through domains created using newdomainshell, just as newdomainshell would have run rinkadddomain just the same
## This does not check for webserver files because 1. that location vaires with lamp/lemp/laemp and 2. we only need to check for a viable reason that the verb system created this domain (inkcert) and that it can be served (inkdns)
## Prerequesite: run inkdnssetns1 inkdnssetns2
## Caution: This should only be used when the Primary Rink nameserver imported this verber after its creation using rink/run/importvps
### Circumstances where this is useful are few, usually relating to project scallability and the PM decision to manage multiple verbers centrally after an enterprise has grown

# How to use:
## ./rinkimportme

usagenotes="This runs rinkadddomain for each domain already active on this verber, intended for just after being imported by the Rink"
usageformat="rinkimportme"
usageexample="rinkimportme"
hierarchy=( primary )
vsetnames=(  )
vsettypes=(  )
voptnames=(  )
vopttypes=(  )
voptflags=(  )
voptflagpurpose=(  )
dependencyinstall=( "Controlled by Rink" )
prerequesite=( rink::importvps )
usedby=(  )
useserfs=( rinkupdateallverbs rinkadddomain )
useconfigs=( servertldstatus siteurilist servernameip )
if [ -n "$infoINKonly" ] && [ "$infoINKonly" = "true" ]; then return 0; fi # Must have for proper usage to not run the full serf
if [ -e "/opt/verb/mods/rinkimportme.replace" ]; then . /opt/verb/mods/rinkimportme.replace; return 0; fi # Replaces this script
if [ -e "/opt/verb/mods/rinkimportme.before" ]; then . /opt/verb/mods/rinkimportme.before; fi # Precedes this script


# Configs
. /opt/verb/conf/servertldstatus
. /opt/verb/conf/siteurilist
. /opt/verb/conf/servernameip

# RinkConfigured in any way at all?
if [ -z "$RinkConfigured" ]; then
	/usr/bin/echo "Not connected to any Rink, nowhere to go"
	exit 5
fi

# Already configured?
if [ "$RinkConfigured" != "true" ] && [ "$RinkConfigured" != "rink" ]; then
	echo "Rink NS server keys not configured, DNS nameserver zone files will need to be updated manually"
	exit 0
fi

# Are domain hosting & parking allowed?
if [ "$DomHostAllowed" != "YES" ]; then
	/usr/bin/echo "Domains not even allowed here, I quit"
	exit 5
fi

# Parked domains (first so they are easily over-written)
cd /opt/verb/conf/inkdns/parked || exit 6
for parkedZoneDB in db.*; do
	parkedZone="$(/bin/echo ${parkedZoneDB} | /usr/bin/sed 's/db\.//' )"
  	if [ "${domain}" = '*' ]; then continue; fi
	/opt/verb/serfs/rinkadddomain ${parkedZone}
done

# Loop through active non-verb domains
cd /opt/verb/conf/inkdns/zones || exit 6
for domainDB in db.*; do
  domain="$(/bin/echo ${domainDB} | /bin/sed 's/db\.//' )"
  if [ "${domain}" = '*' ]; then continue; fi
  if [ -f "/opt/verb/conf/inkcert/cli-ini/siteinkcert.${domain}" ]; then
	# Add the entry
	#/usr/bin/echo "inkdnsaddslave ${ServerName}-${ServerTLD} ${domain} -n" >> /opt/verb/conf/inkdns/rinkimportme.tmp
	/opt/verb/serfs/rinkadddomain ${domain}
  fi
done

# Verb domains last for top priority
/opt/verb/serfs/rinkupdateallverbs

# Finish
/usr/bin/echo "All domains listed on the nameservers."



if [ -e "/opt/verb/mods/rinkimportme.after" ]; then . /opt/verb/mods/rinkimportme.after; fi # Follows this script
