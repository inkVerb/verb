#!/bin/bash
#inkVerbSerf! verb.ink

# This requests and gets Letsencrypt-Certbot wildcard certs via inkCert-Certbot for a given domain
## This requests a wildcard certificate, good for the domain and a wildcard for all subdomains
## Prerequesite: inkcertinstall, domains added via newdomain/newdomaincgi or an existing and active verb domain on the server
## This is intended as a subscript of inkcertdocb
### BUT...
###
### DEV: Currently, this script is INTERACTIVE because it requires making an entry in the DNS records!!
###

# How to use:
## ./inkcertreqcb [ domain.tld NO SUBDOMAINS ] [ r (optional) ]

#Eg:
## ./inkcertreqcb inkisaverb.com
## ./inkcertreqcb inkisaverb.com r
## ./inkcertreqcb YOURNAME.verb.blue

usagenotes="This requests and gets Letsencrypt-Certbot wildcard certs via inkCert-Certbot for a given domain"
usageformat="inkcertreqcb [ domain.tld NO SUBDOMAINS ]"
usageexample="inkcertreqcb inkisaverb.com
inkcertreqcb inkisaverb.com r
inkcertreqcb YOURNAME.verb.blue"
hierarchy=( tertiary  )
vsetnames=( "Domain" )
vsettypes=( isDomain )
voptnames=(  )
vopttypes=(  )
voptflags=( r )
voptflagpurpose=( "Refresh if already done (required for domains with certs already installed)" )
dependencyinstall=( inkcertinstall )
prerequesite=( inkcertinstall adddomain 'Certbot DNS Keys installed or CLI interaction' )
usedby=( inkcertdocb )
useserfs=(  )
useconfigs=( servernameip siteurilist servertype inkcertstatus )	# List config files of any kind used in this serf, please preserve order of appearance
if [ -n "$infoINKonly" ] && [ "$infoINKonly" = "true" ]; then return 0; fi # Must have for proper usage to not run the full serf
if [ -e "/opt/verb/mods/inkcertreqcb.replace" ]; then . /opt/verb/mods/inkcertreqcb.replace; return 0; fi # Replaces this script
if [ -e "/opt/verb/mods/inkcertreqcb.before" ]; then . /opt/verb/mods/inkcertreqcb.before; fi # Precedes this script


domain=$1

# Include the configs
. /opt/verb/conf/servernameip
. /opt/verb/conf/siteurilist
. /opt/verb/conf/servertype
. /opt/verb/conf/inkcertstatus

# Check inkCert installed
if [ "${InkCertInstalled}" = "NOT_YET" ]; then
/bin/echo "inkCert not yet installed.

First run inkcertinstall
"
exit 0
fi

# Verify that the domain is installed
if [ ! -f /opt/verb/conf/inkcert/cli-ini/siteinkcert.${domain} ]; then
/bin/echo "Sorry, Bucko. ${domain} is not installed yet.

Do that first, then get back to me.
"; exit 0
fi

# Include and check the inkCert domain config
. /opt/verb/conf/inkcert/cli-ini/siteinkcert.${domain}
inkcertmsg="This sets up certs for inkCert via Certbot."
case ${InkCerted} in
  DONE_SC)
  /bin/echo $inkcertmsg
  /bin/echo "inkCert self-cert is already setup for ${domain}.

To set up certs differently, first run: inkcertrevokesc ${domain}, then run this again.
"
  exit 0
  ;;
  DONE_LE)
  /bin/echo $inkcertmsg
  /bin/echo "inkCert Letsencrypt is already setup for ${domain}.

To set up certs differently, first run: inkcertrevokele ${domain}, then run this again.
"
  exit 0
  ;;
  DONE_CBSINGLE)
  /bin/echo $inkcertmsg
  /bin/echo "inkCert cert-bot single-site cert is already setup for ${domain}.

To set up certs differently, first run: inkcertrevokecbsingle ${domain}, then run this again.
"
  exit 0
  ;;
  DONE_CB)
  if [ -z "$2" ] || [ "$2" != "r" ]; then
    /bin/echo $inkcertmsg
    /bin/echo "inkCert cert-bot is already setup for ${domain}.

To set up certs differently, first run: inkcertrevokecb ${domain}, then run this again.
"
    exit 0
  else
    /bin/echo "Refreshing inkCert cert-bot certs for ${domain}..."
  fi
  ;;
  NO|NOT_YET)
    /bin/echo "Ready to go..."
  ;;
  *)
    if ! /bin/grep -q "InkCerted=NO" /opt/verb/conf/inkcert/cli-ini/siteinkcert.${domain}; then
      /bin/echo "Something's wrong with the inkCert siteinkcert configs! Aborting"
      exit 6
    else
      /bin/echo "Ready to go..."
    fi
  ;;
esac

# Check for verb domain and status
## If verb domain was spelled correctly
if [[ "${domain}" =~ ".verb.email" ]] || [[ "${domain}" =~ ".verb.one" ]] || [[ "${domain}" =~ ".verb.ink" ]] || [[ "${domain}" =~ ".verb.blue" ]] || [[ "${domain}" =~ ".verb.vip" ]] || [[ "${domain}" =~ ".verb.kiwi" ]] || [[ "${domain}" =~ ".verb.red" ]] || [[ "${domain}" =~ ".verb.rocks" ]]; then
 if [[ "${domain}" != *"${ServerName}"* ]]; then
/bin/echo "
Problem: You might have spelled ${domain} wrong.
  - Did you mean to include "${ServerName}"?
  - Are you an awesome person with multiple inkVerb namespaces, but you somehow have the wrong server?
"
exit 0
 fi
fi
## Check specific verb domain tlds
### Create the error message function
verbtld_is_off() {
/bin/echo "
Problem: ${domain} is not active on this server...
  1. It could be running on a different Verber server. If so, run inkCert on that server.
  2. You could have planned it for this Verber server, but it's not on. Activate on this server with verbon
  3. It's possible you haven't purchased an inkVerb namespace from inkisaverb.com. It's not that expensive.
"; exit 0;
}
### Do the checks per each verb tld
. /opt/verb/conf/servertldstatus
if [ "${domain}" = "${emailURI}" ]; then
 if [[ "${VERBemail}" != true ]]; then
  verbtld_is_off
 fi
fi
if [ "${domain}" = "${oneURI}" ]; then
 if [[ "${VERBone}" != true ]]; then
  verbtld_is_off
 fi
fi
if [ "${domain}" = "${inkURI}" ]; then
 if [[ "${VERBink}" != true ]]; then
  verbtld_is_off
 fi
fi
if [ "${domain}" = "${blueURI}" ]; then
 if [[ "${VERBblue}" != true ]]; then
  verbtld_is_off
 fi
fi
if [ "${domain}" = "${vipURI}" ]; then
 if [[ "${VERBvip}" != true ]]; then
  verbtld_is_off
 fi
fi
if [ "${domain}" = "${kiwiURI}" ]; then
 if [[ "${VERBkiwi}" != true ]]; then
  verbtld_is_off
 fi
fi
if [ "${domain}" = "${redURI}" ]; then
 if [[ "${VERBred}" != true ]]; then
  verbtld_is_off
 fi
fi

# Stop Apache
/bin/systemctl stop httpd; wait

# Get the certs
##NOTE make the system wait before and after Certbot because sometimes CB can stumble over it's own feet.
sleep 1
#DEV: This currently does only the domain interactively, not according to cli.ini files; this needs to be automated to modify inkDNS zone files with --preferred-challenges=dns
#/usr/bin/certbot certonly --dns-rfc2136 --dns-rfc2136-credentials /etc/letsencrypt/rfc2136.ini --email ${InkCertEmail} --server https://acme-v02.api.letsencrypt.org/directory --agree-tos --no-eff-email --force-renewal -d "${domain}" -d *.${domain}
#DEV: The above shell command should work, once the non-server Named zones are synced with other nameservers, such as ns1.inkisaverb.com
if [ ${ServerType} = "lemp" ] || [ ${ServerType} = "laemp" ]; then
  /usr/bin/certbot --nginx certonly --preferred-challenges=dns --email ${InkCertEmail} --server https://acme-v02.api.letsencrypt.org/directory --agree-tos --no-eff-email --renew-by-default -d "${domain}" -d *.${domain}
  if [ "$?" != "0" ]; then
    errcode="$?"
    /bin/echo "inkCert certbot non-zero exit status for ${domain}: $errcode"
    exit $errcode
  elif [ ! -e "/etc/inkcert/le/live/${domain}/fullchain.pem" ] || [ ! -d "/etc/inkcert/le/archive/${domain}" ]; then
    /usr/bin/echo "inkCert certs do not exist"
    exit 4
  fi
  /bin/systemctl restart nginx; wait
elif [ ${ServerType} = "lamp" ]; then
  /usr/bin/certbot --apache certonly --preferred-challenges=dns --email ${InkCertEmail} --server https://acme-v02.api.letsencrypt.org/directory --agree-tos --no-eff-email --renew-by-default -d "${domain}" -d *.${domain}
  if [ "$?" != "0" ]; then
    errcode="$?"
    /bin/echo "inkCert certbot non-zero exit status for ${domain}: $errcode"
    exit $errcode
  elif [ ! -e "/etc/inkcert/le/live/${domain}/fullchain.pem" ] || [ ! -d "/etc/inkcert/le/archive/${domain}" ]; then
    /usr/bin/echo "inkCert certs do not exist"
    exit 4
  fi
  /bin/systemctl start httpd; wait
fi
wait
sleep 1
# the --quiet / -q option doesn't seem to work
# Additional options if not doing certonly: --no-redirect --no-hsts --no-uir
# https://certbot.eff.org/docs/using.html#command-line
# https://certbot.eff.org/#ubuntuxenial-apache

# Finish
if [ -e "/etc/inkcert/le/live/${domain}/cert.pem" ] && [ -e "/etc/inkcert/le/live/${domain}/chain.pem" ] && [ -e "/etc/inkcert/le/live/${domain}/fullchain.pem" ] && [ -e "/etc/inkcert/le/live/${domain}/privkey.pem" ]; then
  /bin/echo "
  Finished getting certs. Now to install them with inkcertaddcb...
  "
else
  /bin/echo "Certs not installed, cannot proceed."
  exit 4
fi




if [ -e "/opt/verb/mods/inkcertreqcb.after" ]; then . /opt/verb/mods/inkcertreqcb.after; fi # Follows this script
