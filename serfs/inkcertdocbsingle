#!/bin/bash
#inkVerbSerf! verb.ink

# This batch runs inkCert-Certbot request and install scripts for a given domain, including inkVerb namespace domains
## It also applies to all subdomains for that domain
## Prereqesite: inkcertinstall

# How to use:
## ./inkcertdocbsingle [ domain.tld NO SUBDOMAINS ]

#Eg:
## ./inkcertdocbsingle inkisaverb.com
## ./inkcertdocbsingle inkisaverb.com r
## ./inkcertdocbsingle YOURNAME.verb.blue

usagenotes="This batch runs inkCert-Certbot request and install scripts for a given domain, including inkVerb namespace domains"
usageformat="inkcertdocbsingle [ domain.tld NO SUBDOMAINS ]"
usageexample="inkcertdocbsingle inkisaverb.com
inkcertdocbsingle inkisaverb.com r
inkcertdocbsingle YOURNAME.verb.one"
hierarchy=( primary )	# Choose: primary (works by itself, may use secondaries or tertiaries); secondary (can work by itself, but not normally, may use other secondaries or tertiaries); tertiary (cannot run by itself, must be run by a secondary or primary);oversight (uses primaries)
vsetnames=( "Domain" )	# "Pretty" names for each setting, must be in order of settings
vsettypes=( isDomain )
voptnames=(  )
vopttypes=(  )
voptflags=( r )
voptflagpurpose=( "Refresh if already done (required for domains with certs already installed)" )
dependencyinstall=( inkcertinstall )
prerequesite=( inkcertinstall )
usedby=( inkcertdocbsingle-all-verbs )
useserfs=( inkcertreqcbsingle inkcertaddallcbsingle inkcertcheck setinkcertmailcerts )
useconfigs=( siteurilist )	# List config files of any kind used in this serf, please preserve order of appearance
if [ -n "$infoINKonly" ] && [ "$infoINKonly" = "true" ]; then return 0; fi # Must have for proper usage to not run the full serf
if [ -e "/opt/verb/mods/inkcertdocbsingle.replace" ]; then . /opt/verb/mods/inkcertdocbsingle.replace; return 0; fi # Replaces this script
if [ -e "/opt/verb/mods/inkcertdocbsingle.before" ]; then . /opt/verb/mods/inkcertdocbsingle.before; fi # Precedes this script


domain=$1

# Refresh option
if [ -n "$2" ] && [ "$2" = "r" ]; then
  suffix=" r"
else
  suffix=""
fi

# Check inkCert installed
if [ "${InkCertInstalled}" = "NOT_YET" ]; then
/bin/echo "inkCert not yet installed.

First run inkcertinstall
"
exit 0
fi

# Check variables
if [ -z ${1} ]; then
/bin/echo "You need to specify a domain. Read the instructions."; exit 0
fi

# Request and get the certs
/opt/verb/serfs/inkcertreqcbsingle ${domain}${suffix}
e="$?"; [[ "$e" = "0" ]] || exit "$e"

# Install the certs
if /bin/grep -q "InkCerted=NO" /opt/verb/conf/inkcert/cli-ini/siteinkcert.${domain}; then
  if [ -e /etc/inkcert/le/live/${domain} ]; then
    /opt/verb/serfs/inkcertaddcbsingle ${domain}
    e="$?"; [[ "$e" = "0" ]] || exit "$e"
  fi
fi

# Check if installed
/opt/verb/serfs/inkcertcheck ${domain}
e="$?"; [[ "$e" = "0" ]] || exit "$e"

# Domain check for mail certs
. /opt/verb/conf/siteurilist
if [ "${domain}" = "${nameURI}" ]; then
  /opt/verb/serfs/setinkcertmailcerts ${domain} inkvmail
  e="$?"; [[ "$e" = "0" ]] || exit "$e"
elif [ "${domain}" != "${emailTLD}" ] && [ "${domain}" != "${hostURI}" ] && [ "${domain}" != "${serveURI}" ] && [ "${domain}" != "${emailTLDURI}" ] && [ "${domain}" != "${emailURI}" ] && [ "${domain}" != "${oneURI}" ] && [ "${domain}" != "${inkURI}" ] && [ "${domain}" != "${blueURI}" ] && [ "${domain}" != "${vipURI}" ] && [ "${domain}" != "${kiwiURI}" ] && [ "${domain}" != "${redURI}" ]; then
  /opt/verb/serfs/setinkcertmailcerts ${domain}
  e="$?"; [[ "$e" = "0" ]] || exit "$e"
fi

# Check if the certs exist
if [ ! -e "/etc/inkcert/le/live/${domain}/cert.pem" ] || [ ! -e "/etc/inkcert/le/live/${domain}/privkey.pem" ] || [ ! -e "/etc/inkcert/le/live/${domain}/chain.pem" ]; then
  /usr/bin/echo "Certs don't exist. I quit."
  exit 8
fi

# Update the inkCert-DOMAIN config file, fail silently (eg. when used on subdomains)
/bin/sed -i "s/InkCerted=.*/InkCerted=DONE_CBSINGLE/" /opt/verb/conf/inkcert/cli-ini/siteinkcert.${domain} 2> /dev/null

# Finish
/bin/echo "
Excellent!
Verify above exits - IMPORTANT NOTES: ... - Congratulations!

If so, then ${domain} and all subdomains are now live with inkCert Letsencrypt certificates.
"




if [ -e "/opt/verb/mods/inkcertdocbsingle.after" ]; then . /opt/verb/mods/inkcertdocbsingle.after; fi # Follows this script
