#!/bin/bash
#inkVerbSerf! verb.ink

# This removes all listed domains on the NS nameservers and re-adds only verb domains hosted on this verber
## This intented to be run by rinkimportme as the first step of clearing the listed slave domains before re-adding and refreshing the listed domains

# How to use:
## ./rinkupdateallverbs

usagenotes="his removes all listed domains on the NS nameservers and re-adds only verb domains hosted on this verber"
usageformat="rinkupdateallverbs"
usageexample="rinkupdateallverbs"
hierarchy=( secondary )
vsetnames=(  )
vsettypes=(  )
voptnames=(  )
vopttypes=(  )
voptflags=(  )
voptflagpurpose=(  )
dependencyinstall=( "Controlled by Rink" )
prerequesite=(  )
usedby=( rink::addvps )
useserfs=( rinkimportme )
useconfigs=( servernameip )

if [ -n "$infoINKonly" ] && [ "$infoINKonly" = "true" ]; then return 0; fi # Must have for proper usage to not run the full serf
if [ -e "/opt/verb/mods/rinkupdateallverbs.replace" ]; then . /opt/verb/mods/rinkupdateallverbs.replace; return 0; fi # Replaces this script
if [ -e "/opt/verb/mods/rinkupdateallverbs.before" ]; then . /opt/verb/mods/rinkupdateallverbs.before; fi # Precedes this script


# Configs
. /opt/verb/conf/servernameip

# Already configured or allowed rink?
if [ "$RinkConfigured" = "rink" ] && [ -f "/opt/rink/rinknames" ]; then
  . /opt/rink/rinknames
  ns1="${RinkNS1Name}.${RinkVerbTLD}"
  ns2="${RinkNS2Name}.${RinkVerbTLD}"
elif [ "$RinkConfigured" != "true" ]; then
	/usr/bin/echo "Rink NS server keys not configured, this won't work"
	exit 0
else
  ns1="ns1"
  ns2="ns1"
fi

if [ $VERBemail=true ]; then
/usr/bin/ssh ${ns1} <<EOS
/usr/bin/cat <<EOF > /srv/sns/${ServerName}-${ServerTLD}/domains/served/${emailURI}
sdnsDomain="${emailURI}"
sdnsIPv4="${ServerIPv4}"
sdnsIPv4ARPA="${ServerARPAIPv4}"
sdnsIPv6Exp="${ServerExpIPv6}"
sdnsIPv6Cmp="${ServerIPv6}"
sdnsIPv6ARPA="${ServerARPAIPv6}"
EOF
EOS
wait
/usr/bin/ssh ${ns2} <<EOS
/usr/bin/cat <<EOF > /srv/sns/${ServerName}-${ServerTLD}/domains/served/${emailURI}
sdnsDomain="${emailURI}"
sdnsIPv4="${ServerIPv4}"
sdnsIPv4ARPA="${ServerARPAIPv4}"
sdnsIPv6Exp="${ServerExpIPv6}"
sdnsIPv6Cmp="${ServerIPv6}"
sdnsIPv6ARPA="${ServerARPAIPv6}"
EOF
EOS
fi
wait
if [ $VERBone=true ]; then
/usr/bin/ssh ${ns1} <<EOS
/usr/bin/cat <<EOF > /srv/sns/${ServerName}-${ServerTLD}/domains/served/${oneURI}
sdnsDomain="${oneURI}"
sdnsIPv4="${ServerIPv4}"
sdnsIPv4ARPA="${ServerARPAIPv4}"
sdnsIPv6Exp="${ServerExpIPv6}"
sdnsIPv6Cmp="${ServerIPv6}"
sdnsIPv6ARPA="${ServerARPAIPv6}"
EOF
EOS
wait
/usr/bin/ssh ${ns2} <<EOS
/usr/bin/cat <<EOF > /srv/sns/${ServerName}-${ServerTLD}/domains/served/${oneURI}
sdnsDomain="${oneURI}"
sdnsIPv4="${ServerIPv4}"
sdnsIPv4ARPA="${ServerARPAIPv4}"
sdnsIPv6Exp="${ServerExpIPv6}"
sdnsIPv6Cmp="${ServerIPv6}"
sdnsIPv6ARPA="${ServerARPAIPv6}"
EOF
EOS
fi
wait
if [ $VERBink=true ]; then
/usr/bin/ssh ${ns1} <<EOS
/usr/bin/cat <<EOF > /srv/sns/${ServerName}-${ServerTLD}/domains/served/${inkURI}
sdnsDomain="${inkURI}"
sdnsIPv4="${ServerIPv4}"
sdnsIPv4ARPA="${ServerARPAIPv4}"
sdnsIPv6Exp="${ServerExpIPv6}"
sdnsIPv6Cmp="${ServerIPv6}"
sdnsIPv6ARPA="${ServerARPAIPv6}"
EOF
EOS
wait
/usr/bin/ssh ${ns2} <<EOS
/usr/bin/cat <<EOF > /srv/sns/${ServerName}-${ServerTLD}/domains/served/${inkURI}
sdnsDomain="${inkURI}"
sdnsIPv4="${ServerIPv4}"
sdnsIPv4ARPA="${ServerARPAIPv4}"
sdnsIPv6Exp="${ServerExpIPv6}"
sdnsIPv6Cmp="${ServerIPv6}"
sdnsIPv6ARPA="${ServerARPAIPv6}"
EOF
EOS
fi
wait
if [ $VERBblue=true ]; then
/usr/bin/ssh ${ns1} <<EOS
/usr/bin/cat <<EOF > /srv/sns/${ServerName}-${ServerTLD}/domains/served/${blueURI}
sdnsDomain="${blueURI}"
sdnsIPv4="${ServerIPv4}"
sdnsIPv4ARPA="${ServerARPAIPv4}"
sdnsIPv6Exp="${ServerExpIPv6}"
sdnsIPv6Cmp="${ServerIPv6}"
sdnsIPv6ARPA="${ServerARPAIPv6}"
EOF
EOS
wait
/usr/bin/ssh ${ns2} <<EOS
/usr/bin/cat <<EOF > /srv/sns/${ServerName}-${ServerTLD}/domains/served/${blueURI}
sdnsDomain="${blueURI}"
sdnsIPv4="${ServerIPv4}"
sdnsIPv4ARPA="${ServerARPAIPv4}"
sdnsIPv6Exp="${ServerExpIPv6}"
sdnsIPv6Cmp="${ServerIPv6}"
sdnsIPv6ARPA="${ServerARPAIPv6}"
EOF
EOS
fi
wait
if [ $VERBvip=true ]; then
/usr/bin/ssh ${ns1} <<EOS
/usr/bin/cat <<EOF > /srv/sns/${ServerName}-${ServerTLD}/domains/served/${vipURI}
sdnsDomain="${vipURI}"
sdnsIPv4="${ServerIPv4}"
sdnsIPv4ARPA="${ServerARPAIPv4}"
sdnsIPv6Exp="${ServerExpIPv6}"
sdnsIPv6Cmp="${ServerIPv6}"
sdnsIPv6ARPA="${ServerARPAIPv6}"
EOF
EOS
wait
/usr/bin/ssh ${ns2} <<EOS
/usr/bin/cat <<EOF > /srv/sns/${ServerName}-${ServerTLD}/domains/served/${vipURI}
sdnsDomain="${vipURI}"
sdnsIPv4="${ServerIPv4}"
sdnsIPv4ARPA="${ServerARPAIPv4}"
sdnsIPv6Exp="${ServerExpIPv6}"
sdnsIPv6Cmp="${ServerIPv6}"
sdnsIPv6ARPA="${ServerARPAIPv6}"
EOF
EOS
fi
wait
if [ $VERBkiwi=true ]; then
/usr/bin/ssh ${ns1} <<EOS
/usr/bin/cat <<EOF > /srv/sns/${ServerName}-${ServerTLD}/domains/served/${kiwiURI}
sdnsDomain="${kiwiURI}"
sdnsIPv4="${ServerIPv4}"
sdnsIPv4ARPA="${ServerARPAIPv4}"
sdnsIPv6Exp="${ServerExpIPv6}"
sdnsIPv6Cmp="${ServerIPv6}"
sdnsIPv6ARPA="${ServerARPAIPv6}"
EOF
EOS
wait
/usr/bin/ssh ${ns2} <<EOS
/usr/bin/cat <<EOF > /srv/sns/${ServerName}-${ServerTLD}/domains/served/${kiwiURI}
sdnsDomain="${kiwiURI}"
sdnsIPv4="${ServerIPv4}"
sdnsIPv4ARPA="${ServerARPAIPv4}"
sdnsIPv6Exp="${ServerExpIPv6}"
sdnsIPv6Cmp="${ServerIPv6}"
sdnsIPv6ARPA="${ServerARPAIPv6}"
EOF
EOS
fi
wait
if [ $VERBred=true ]; then
/usr/bin/ssh ${ns1} <<EOS
/usr/bin/cat <<EOF > /srv/sns/${ServerName}-${ServerTLD}/domains/served/${redURI}
sdnsDomain="${redURI}"
sdnsIPv4="${ServerIPv4}"
sdnsIPv4ARPA="${ServerARPAIPv4}"
sdnsIPv6Exp="${ServerExpIPv6}"
sdnsIPv6Cmp="${ServerIPv6}"
sdnsIPv6ARPA="${ServerARPAIPv6}"
EOF
EOS
wait
/usr/bin/ssh ${ns2} <<EOS
/usr/bin/cat <<EOF > /srv/sns/${ServerName}-${ServerTLD}/domains/served/${redURI}
sdnsDomain="${redURI}"
sdnsIPv4="${ServerIPv4}"
sdnsIPv4ARPA="${ServerARPAIPv4}"
sdnsIPv6Exp="${ServerExpIPv6}"
sdnsIPv6Cmp="${ServerIPv6}"
sdnsIPv6ARPA="${ServerARPAIPv6}"
EOF
EOS
fi


if [ -e "/opt/verb/mods/rinkupdateallverbs.after" ]; then . /opt/verb/mods/rinkupdateallverbs.after; fi # Follows this script
