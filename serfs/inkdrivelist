#!/bin/bash
#inkVerbSerf! verb.ink
# This lists all mounted drives, including size, usage, device, type, and mounted contents

# How to use:
## ./inkdrivelist [ drive name - optional to see specific drive ] [ 'content' - optional to see content ] [ '-a' - optional see content for single (no drive name) ]

# Eg:
## ./inkdrivelist
## ./inkdrivelist mydrive
## ./inkdrivelist mydrive content
## ./inkdrivelist content -a


usagenotes="This lists all mounted drives, including size, device, type, and mounted contents"
usageformat="inkdrivelist [ drive name - optional to see specific drive; ] [ 'content' - optional to see content ] [ '-a' - optional see content for single (no drive name) ]"
usageexample="inkdrivelist
inkdrivelist mydrive
inkdrivelist mydrive content
inkdrivelist content -a"
hierarchy=( primary )
vsetnames=(  )
vsettypes=(  )
voptnames=( "Drive name" "'content'" "-s" )
vopttypes=( isExists string string )
voptflags=(  )
voptflagpurpose=(  )
dependencyinstall=(  )
prerequesite=( inkdriveadd )
usedby=(  )
useserfs=(  )
useconfigs=( inkdrive/inkdriveinfo )
if [ -n "$infoINKonly" ] && [ "$infoINKonly" = "true" ]; then return 0; fi # Must have for proper usage to not run the full serf
if [ -e "/opt/verb/mods/inkdrivelist.replace" ]; then . /opt/verb/mods/inkdrivelist.replace; return 0; fi # Replaces this script
if [ -e "/opt/verb/mods/inkdrivelist.before" ]; then . /opt/verb/mods/inkdrivelist.before; fi # Precedes this script

# Check if installed
if [ ! -f "/opt/verb/conf/inkdrive/inkdriveinfo" ]; then
  /usr/bin/echo "inkDrive not installed. Nothing to show."
fi

# Single drive or all; show content or not?
if [ -n "$1" ] && [ -z "$2" ]; then
  display="single"
  content="false"
elif [ -n "$1" ] && [ -n "$2" ] && [ "$2" = "content" ] ; then
  display="single"
  content="true"
elif [ -n "$1" ] && [ "$1" = "content" ] && [ -n "$2" ] && [ "$2" = "-a" ]; then
  display="all"
  content="true"
elif [ -z "$1" ]; then
  display="all"
  content="false"
else
  /usr/bin/echo "Incorrect arguments. Read the instructions."
  exit 5
fi

## Single drive
if [ "${display}" = "single" ]; then
    mnt="$1"
    spaceSizeH="$(/usr/bin/df -h "/mnt/${mnt}" | /usr/bin/awk 'NR==2 { print $2 }')"
    spaceUsedH="$(/usr/bin/df -h "/mnt/${mnt}" | /usr/bin/awk 'NR==2 { print $3 }')"
    spaceAvailH="$(/usr/bin/df -h "/mnt/${mnt}" | /usr/bin/awk 'NR==2 { print $4 }')"
    device="$(/usr/bin/readlink -f "/mnt/${mnt}" | sed "s:/dev/::")"
    if [ -f "/opt/verb/conf/inkdrive/ssd.${mnt}" ]; then
        typ="ssd"
    elif [ -f "/opt/verb/conf/inkdrive/hdd.${mnt}" ]; then
        typ="hdd"
    fi

    # Check the config
    . /opt/verb/conf/inkdrive/"${typ}"."${mnt}"
    [[ "${type}" != "${typ}" ]] && /usr/bin/echo "Config file is inconsistent with itself. Something is very wrong." && exit 6
    
    # Collect the drive info
    spaceSizeH="$(/usr/bin/df -h "/mnt/${mnt}" | /usr/bin/awk 'NR==2 { print $2 }')"
    spaceUsedH="$(/usr/bin/df -h "/mnt/${mnt}" | /usr/bin/awk 'NR==2 { print $3 }')"
    spaceAvailH="$(/usr/bin/df -h "/mnt/${mnt}" | /usr/bin/awk 'NR==2 { print $4 }')"
    device="$(/usr/bin/readlink -f "/mnt/${mnt}" | sed "s:/dev/::")"
    if [ -f "/opt/verb/conf/inkdrive/ssd.${mnt}" ]; then
        typ="ssd"
        typeH="SSD"
    elif [ -f "/opt/verb/conf/inkdrive/hdd.${mnt}" ]; then
        typ="hdd"
        typeH="HDD"
    fi

    # Check the config
    . /opt/verb/conf/inkdrive/"${typ}"."${mnt}"
    [[ "${type}" != "${typ}" ]] && /usr/bin/echo "Config file is inconsistent with itself. Something is very wrong." && exit 6

    # echo the drive info
    /usr/bin/echo ${spaceSizeH}$'\t'${spaceUsedH}$'\t'${spaceAvailH}$'\t'${typeH}$'\t'${device}

    # List content?
    if [ "${content}" = "true" ]; then
        cd "/mnt/${mnt}" || /usr/bin/echo "Drive has configs, but is not mounted. Something is very wrong." && exit 6
        for dir in */; do
            dir="$(/usr/bin/echo ${dir} | sed "s:/::")"
            destUsedH="$(/usr/bin/df -h "/mnt/${mnt}/${dir}" | /usr/bin/awk 'NR==2 { print $3 }')"
            /usr/bin/echo ${destUsedH}$'\t'${dir}
        done
    fi
    
## All drives
elif [ "${display}" = "all" ]; then
    cd /mnt || exit 6
    for mnt in */ ; do
        # Remove the trailing slash from the loop list
        mnt=${mnt%/}

        # Collect the drive info
        spaceSizeH="$(/usr/bin/df -h "/mnt/${mnt}" | /usr/bin/awk 'NR==2 { print $2 }')"
        spaceUsedH="$(/usr/bin/df -h "/mnt/${mnt}" | /usr/bin/awk 'NR==2 { print $3 }')"
        spaceAvailH="$(/usr/bin/df -h "/mnt/${mnt}" | /usr/bin/awk 'NR==2 { print $4 }')"
        device="$(/usr/bin/readlink -f "/mnt/${mnt}" | sed "s:/dev/::")"
        if [ -f "/opt/verb/conf/inkdrive/ssd.${mnt}" ]; then
            typ="ssd"
            typeH="SSD"
        elif [ -f "/opt/verb/conf/inkdrive/hdd.${mnt}" ]; then
            typ="hdd"
            typeH="HDD"
        fi
        
        # Check the config
        . /opt/verb/conf/inkdrive/"${typ}"."${mnt}"
        [[ "${type}" != "${typ}" ]] && /usr/bin/echo "Config file is inconsistent with itself. Something is very wrong." && exit 6
        
        # echo the info
        /usr/bin/echo ${spaceSizeH}$'\t'${spaceUsedH}$'\t'${spaceAvailH}$'\t'${typeH}$'\t'${device}/ ${mnt}

    # List content?
    if [ "${content}" = "true" ]; then
        cd "/mnt/${mnt}" || /usr/bin/echo "Drive has configs, but is not mounted. Something is very wrong." && exit 6
        for dir in */; do
            dir="$(/usr/bin/echo ${dir} | sed "s:/::")"
            destUsedH="$(/usr/bin/df -h "/mnt/${mnt}/${dir}" | /usr/bin/awk 'NR==2 { print $3 }')"
            /usr/bin/echo ${destUsedH}$'\t'${dir}
        done
    fi
    done
fi


if [ -e "/opt/verb/mods/inkdrivelist.after" ]; then . /opt/verb/mods/inkdrivelist.after; fi # Follows this script
