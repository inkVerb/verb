#!/bin/bash
#inkVerbSerf! verb.ink

# This requests and gets Letsencrypt certs via inkCert-Letsencrypt for a given domain, including inkVerb namespace domains
## It also applies to all subdomains for that domain
## Prerequesite: inkcertinstall, domains added via adddomain or an existing and active verb domain on the server
## This is intended as a subscript of inkcertdole
## This should renew by default, to include recently-added subdomains in the verb/config/inkcert/cli-ini/ files

# How to use:
## ./inkcertreqle [ domain.tld NO SUBDOMAINS ] [ r (optional) ]

#Eg:
## ./inkcertreqle inkisaverb.com
## ./inkcertreqle inkisaverb.com r
## ./inkcertreqle YOURNAME.verb.blue

usagenotes="This requests and gets Letsencrypt certs via inkCert-Letsencrypt for a given domain, including inkVerb namespace domains"
usageformat="inkcertreqle [ domain.tld NO SUBDOMAINS ]"
usageexample="inkcertreqle inkisaverb.com
inkcertreqle inkisaverb.com r
inkcertreqle YOURNAME.verb.blue"
hierarchy=( tertiary inkcertdole )
vsetnames=( "Domain" )
vsettypes=( isDomain )
voptnames=(  )
vopttypes=(  )
voptflags=( r )
voptflagpurpose=( "Refresh if already done (required for domains with certs already installed)" )
dependencyinstall=( inkcertinstall )
prerequesite=( inkcertinstall adddomain )
usedby=( inkcertdole )
useserfs=(  )
useconfigs=( servernameip siteurilist servertype inkcertstatus )	# List config files of any kind used in this serf, please preserve order of appearance
if [ -n "$infoINKonly" ] && [ "$infoINKonly" = "true" ]; then return 0; fi # Must have for proper usage to not run the full serf
if [ -e "/opt/verb/mods/inkcertreqle.replace" ]; then . /opt/verb/mods/inkcertreqle.replace; return 0; fi # Replaces this script
if [ -e "/opt/verb/mods/inkcertreqle.before" ]; then . /opt/verb/mods/inkcertreqle.before; fi # Precedes this script


domain=$1

# Include the configs
. /opt/verb/conf/servernameip
. /opt/verb/conf/siteurilist
. /opt/verb/conf/servertype
. /opt/verb/conf/inkcertstatus

# Check inkCert installed
if [ "${InkCertInstalled}" = "NOT_YET" ]; then
/usr/bin/echo "inkCert not yet installed.

First run inkcertinstall
"
exit 0
fi

# Verify that the domain is installed
if [ ! -f /opt/verb/conf/inkcert/cli-ini/siteinkcert.${domain} ]; then
/usr/bin/echo "Sorry, Bucko. ${domain} is not installed yet.

Do that first, then get back to me.
"; exit 0
fi

# Include and check the inkCert domain config
. /opt/verb/conf/inkcert/cli-ini/siteinkcert.${domain}
inkcertmsg="This sets up certs for inkCert's via Letsencrypt."
case ${InkCerted} in
  DONE_SC)
  /usr/bin/echo $inkcertmsg
  /usr/bin/echo "inkCert self-cert is already setup for ${domain}.

To set up certs differently, first run: inkcertrevokesc ${domain}, then run this again.
"
  exit 0
  ;;
  DONE_LE)
  if [ -z "$2" ] || [ "$2" != "r" ]; then
    /usr/bin/echo $inkcertmsg
    /usr/bin/echo "inkCert Letsencrypt is already setup for ${domain}.

To set up certs differently, first run: inkcertrevokele ${domain}, then run this again.
"
    exit 0
  else
    /usr/bin/echo "Refreshing inkCert Letsencrypt certs for ${domain}..."
  fi
  ;;
  DONE_CBSINGLE)
  /usr/bin/echo $inkcertmsg
  /usr/bin/echo "inkCert cert-bot single-site cert is already setup for ${domain}.

To set up certs differently, first run: inkcertrevokecbsingle ${domain}, then run this again.
"
  exit 0
  ;;
  DONE_CB)
  /usr/bin/echo $inkcertmsg
  /usr/bin/echo "inkCert cert-bot is already setup for ${domain}.

To set up certs differently, first run: inkcertrevokecb ${domain}, then run this again.
"
  exit 0
  ;;
  NO|NOT_YET)
    /usr/bin/echo "Ready to go..."
  ;;
  *)
    if ! /bin/grep -q "InkCerted=NO" /opt/verb/conf/inkcert/cli-ini/siteinkcert.${domain}; then
      /usr/bin/echo "Something's wrong with the inkCert siteinkcert configs! Aborting"
      exit 6
    else
      /usr/bin/echo "Ready to go..."
    fi
  ;;
esac

# Check for verb domain and status
## If verb domain was spelled correctly
if [[ "${domain}" =~ ".verb.email" ]] || [[ "${domain}" =~ ".verb.one" ]] || [[ "${domain}" =~ ".verb.ink" ]] || [[ "${domain}" =~ ".verb.blue" ]] || [[ "${domain}" =~ ".verb.vip" ]] || [[ "${domain}" =~ ".verb.kiwi" ]] || [[ "${domain}" =~ ".verb.red" ]] || [[ "${domain}" =~ ".verb.rocks" ]]; then
 if [[ "${domain}" != *"${ServerName}"* ]]; then
/usr/bin/echo "
Problem: You might have spelled ${domain} wrong.
  - Did you mean to include "${ServerName}"?
  - Are you an awesome person with multiple inkVerb namespaces, but you somehow have the wrong server?
"
exit 0
 fi
fi
## Check specific verb domain tlds
### Create the error message function
verbtld_is_off() {
/usr/bin/echo "
Problem: ${domain} is not active on this server...
  1. It could be running on a different Verber server. If so, run inkCert on that server.
  2. You could have planned it for this Verber server, but it's not on. Activate on this server with verbon
  3. It's possible you haven't purchased an inkVerb namespace from inkisaverb.com. It's not that expensive.
"; exit 0;
}
### Do the checks per each verb tld
. /opt/verb/conf/servertldstatus
if [ "${domain}" = "${emailURI}" ]; then
 if [[ "${VERBemail}" != true ]]; then
  verbtld_is_off
 fi
fi
if [ "${domain}" = "${oneURI}" ]; then
 if [[ "${VERBone}" != true ]]; then
  verbtld_is_off
 fi
fi
if [ "${domain}" = "${inkURI}" ]; then
 if [[ "${VERBink}" != true ]]; then
  verbtld_is_off
 fi
fi
if [ "${domain}" = "${blueURI}" ]; then
 if [[ "${VERBblue}" != true ]]; then
  verbtld_is_off
 fi
fi
if [ "${domain}" = "${vipURI}" ]; then
 if [[ "${VERBvip}" != true ]]; then
  verbtld_is_off
 fi
fi
if [ "${domain}" = "${kiwiURI}" ]; then
 if [[ "${VERBkiwi}" != true ]]; then
  verbtld_is_off
 fi
fi
if [ "${domain}" = "${redURI}" ]; then
 if [[ "${VERBred}" != true ]]; then
  verbtld_is_off
 fi
fi

# Get the certs
##NOTE make the system wait before and after Letsencrypt because sometimes LE can stumble over it's own feet.
sleep 1
## We may need `yes n |` as alternatives to --server https://acme-v02.api.letsencrypt.org/directory --agree-tos
if [ ${ServerType} = "lemp" ] || [ ${ServerType} = "laemp" ]; then
  #DEV avoid trouble with nginx: `[emerg] bind() to [::]:80 failed (98: Address already in use)` also: 0.0.0.0:80, 0.0.0.0:443, [::]:443
  if [ "$(/usr/bin/systemctl is-active --quiet nginx)" != "0" ]; then
    /usr/bin/systemctl stop nginx
    if [ ${ServerType} = "laemp" ]; then
      /usr/bin/systemctl stop httpd
    fi
    /usr/bin/fuser -k 443/tcp # Thank you https://stackoverflow.com/a/49548253/10343144
    /usr/bin/systemctl start nginx

    if [ ${ServerType} = "laemp" ]; then
      /usr/bin/systemctl start httpd
    fi
  fi
  ### Make sure Nginx is running
  count=0
  while [ "$(/usr/bin/systemctl is-active --quiet nginx)" != "0" ]; do
    if [ "${count}" -gt "40" ]; then
      /usr/bin/echo "Nginx has a problem; can't get LE certs!"
      exit 4
    fi
    /usr/bin/sleep 3
    count=$((count + 1))
  done
  
  #yes n | /usr/bin/certbot --nginx certonly --expand --renew-by-default -c /opt/verb/conf/inkcert/cli-ini/cli.${domain}.ini
  /usr/bin/certbot --nginx certonly --expand --server https://acme-v02.api.letsencrypt.org/directory --agree-tos --no-eff-email --renew-by-default -c /opt/verb/conf/inkcert/cli-ini/cli.${domain}.ini
  if [ "$?" != "0" ]; then
    errcode="$?"
    /usr/bin/echo "inkCert le-certbot non-zero exit status for ${domain}: $errcode"
    exit $errcode
  elif [ ! -e "/etc/inkcert/le/live/${domain}/fullchain.pem" ] || [ ! -d "/etc/inkcert/le/archive/${domain}" ]; then
    /usr/bin/echo "inkCert certs do not exist"
    exit 4
  fi
  /bin/systemctl restart nginx; wait
elif [ ${ServerType} = "lamp" ]; then
  /usr/bin/certbot --apache certonly --expand --server https://acme-v02.api.letsencrypt.org/directory --agree-tos --no-eff-email --renew-by-default -c /opt/verb/conf/inkcert/cli-ini/cli.${domain}.ini
  if [ "$?" != "0" ]; then
    errcode="$?"
    /usr/bin/echo "inkCert le-certbot non-zero exit status for ${domain}: $errcode"
    exit $errcode
  elif [ ! -e "/etc/inkcert/le/live/${domain}/fullchain.pem" ] || [ ! -d "/etc/inkcert/le/archive/${domain}" ]; then
    /usr/bin/echo "inkCert certs do not exist"
    exit 4
  fi
  /bin/systemctl restart httpd; wait
fi
wait
sleep 1

# Finish
if [ -e "/etc/inkcert/le/live/${domain}/cert.pem" ] && [ -e "/etc/inkcert/le/live/${domain}/chain.pem" ] && [ -e "/etc/inkcert/le/live/${domain}/fullchain.pem" ] && [ -e "/etc/inkcert/le/live/${domain}/privkey.pem" ]; then
  /usr/bin/echo "
  Finished getting certs. Now to install them with inkcertaddle...
  "
else
  /usr/bin/echo "Certs not installed, cannot proceed."
  exit 4
fi




if [ -e "/opt/verb/mods/inkcertreqle.after" ]; then . /opt/verb/mods/inkcertreqle.after; fi # Follows this script
